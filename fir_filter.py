from collections import deque


class Fir_Filter:
    def __init__(self):
        self.faktors = [
                -0.000000000000000001, -0.001950954878487109, -0.001727011198349234,
                0.002622041159347517, 0.006402517598487577, -0.000000000000000005,
                -0.013407896033457392, -0.011526448661368861, 0.015748326565458763,
                0.034483285811700688, -0.000000000000000012, -0.064285771396989308,
                -0.056995127112330672, 0.089999364835311124, 0.300257410872501074,
                0.400760524876351887, 0.300257410872501074, 0.089999364835311110,
                -0.056995127112330686, -0.064285771396989322, -0.000000000000000012,
                0.034483285811700695, 0.015748326565458777, -0.011526448661368866,
                -0.013407896033457394, -0.000000000000000005, 0.006402517598487575,
                0.002622041159347518, -0.001727011198349233, -0.001950954878487109,
                -0.000000000000000001,
                ]
        self.inputs = deque(maxlen=len(self.faktors))

    def give_filtered(self, value):
        self.inputs.appendleft(value)
        output = 0
        for count, input in enumerate(self.inputs):
            output += input * self.faktors[count]
        return output

    def reset(self):
        self.inputs = deque(maxlen=self.order)
