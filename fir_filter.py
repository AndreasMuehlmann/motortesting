from collections import deque


class Fir_Filter:
    def __init__(self):
        self.faktors = [
                -0.001732726398404935, -0.001987482972320624, -0.002421532511687359,
                -0.002671134127391077, -0.002119253996275378, 0.000000000000000001,
                0.004438056875823593, 0.011742260519916912, 0.022081550379858313,
                0.035128922834733470, 0.050032474753942485, 0.065489405943150669,
                0.079915841566160439, 0.091684439810602356, 0.099386172410234300,
                0.102066009823313320, 0.099386172410234300, 0.091684439810602342,
                0.079915841566160467, 0.065489405943150697, 0.050032474753942506,
                0.035128922834733484, 0.022081550379858331, 0.011742260519916919,
                0.004438056875823594, 0.000000000000000001, -0.002119253996275377,
                -0.002671134127391078, -0.002421532511687358, -0.001987482972320624,
                -0.001732726398404935,
                ]
        self.inputs = deque(maxlen=len(self.faktors))

    def give_filtered(self, value):
        self.inputs.appendleft(value)
        output = 0
        for count, input in enumerate(self.inputs):
            output += input * self.faktors[count]
        return output

    def reset(self):
        self.inputs = deque(maxlen=self.order)
