from collections import deque


class Fir_Filter:
    def __init__(self):
        self.faktors = [
            0.000000000000000000, 0.000001552665952967, 0.000006045727296273,
            0.000012366638548954, 0.000018297013077202, 0.000020700775014367,
            0.000015867395468571, 0.000000000000000000, -0.000030177174878552,
            -0.000076735051493877, -0.000139841149021983, -0.000217124592171444,
            -0.000303195821198544, -0.000389417531496686, -0.000464018521207209,
            -0.000512624809713191, -0.000519251596391317, -0.000467755971384620,
            -0.000343696263343877, -0.000136483918842088, 0.000158346061193159,
            0.000536972586883317, 0.000985497693468217, 0.001478806385878138,
            0.001980342848093270, 0.002443023947784113, 0.002811434151293915,
            0.003025340381994955, 0.003024437963642631, 0.002754099946757410,
            0.002171764834224101, 0.001253476542520441, -0.000000000000000001,
            -0.001558110743014210, -0.003357107525544638, -0.005298854662707245,
            -0.007252268502499601, -0.009057630225811693, -0.010533788750162512,
            -0.011488021926153568, -0.011728071285916561, -0.011075631584850854,
            -0.009380384464327780, -0.006533536678891387, -0.002479773931077831,
            0.002773418459636669, 0.009149984667050198, 0.016503775695725184,
            0.024621683424218704, 0.033231499537008484, 0.042014203961521224,
            0.050620030909565392, 0.058687342031452955, 0.065863084107221789,
            0.071823446692263024, 0.076293279453756066, 0.079062886843253244,
            0.080000986680672570, 0.079062886843253258, 0.076293279453756066,
            0.071823446692263024, 0.065863084107221789, 0.058687342031452948,
            0.050620030909565399, 0.042014203961521224, 0.033231499537008491,
            0.024621683424218714, 0.016503775695725184, 0.009149984667050200,
            0.002773418459636669, -0.002479773931077831, -0.006533536678891389,
            -0.009380384464327780, -0.011075631584850858, -0.011728071285916564,
            -0.011488021926153575, -0.010533788750162518, -0.009057630225811693,
            -0.007252268502499605, -0.005298854662707247, -0.003357107525544640,
            -0.001558110743014210, -0.000000000000000001, 0.001253476542520441,
            0.002171764834224101, 0.002754099946757410, 0.003024437963642633,
            0.003025340381994960, 0.002811434151293916, 0.002443023947784113,
            0.001980342848093272, 0.001478806385878138, 0.000985497693468218,
            0.000536972586883318, 0.000158346061193159, -0.000136483918842088,
            -0.000343696263343877, -0.000467755971384621, -0.000519251596391317,
            -0.000512624809713191, -0.000464018521207210, -0.000389417531496685,
            -0.000303195821198545, -0.000217124592171445, -0.000139841149021982,
            -0.000076735051493877, -0.000030177174878553, 0.000000000000000000,
            0.000015867395468571, 0.000020700775014367, 0.000018297013077202,
            0.000012366638548954, 0.000006045727296273, 0.000001552665952967,
            0.000000000000000000,
        ]
        self.inputs = deque(maxlen=len(self.faktors))

    def give_filtered(self, value):
        self.inputs.appendleft(value)
        output = 0
        for count, input in enumerate(self.inputs):
            output += input * self.faktors[count]
        return output

    def reset(self):
        self.inputs = deque(maxlen=self.order)
